// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using StrayHome.Infrastructure.Data;

#nullable disable

namespace Stray_Home_Infrastructure.Migrations
{
    [DbContext(typeof(StrayHomeContext))]
    [Migration("20231019174624_first")]
    partial class first
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.12")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Stray_Home_Domain.Entities.Animal", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("IsAvailableForAdoption")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Photos")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("ShelterID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("ShelterID");

                    b.ToTable("Animals");
                });

            modelBuilder.Entity("Stray_Home_Domain.Entities.Comment", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("ShelterID")
                        .HasColumnType("int");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("UserID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("ShelterID");

                    b.HasIndex("UserID");

                    b.ToTable("Comments");
                });

            modelBuilder.Entity("Stray_Home_Domain.Entities.News", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("PublicationDate")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("ShelterID")
                        .HasColumnType("int");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("ID");

                    b.HasIndex("ShelterID");

                    b.ToTable("News");
                });

            modelBuilder.Entity("Stray_Home_Domain.Entities.Shelter", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("AdministratorID")
                        .HasColumnType("int");

                    b.Property<string>("ContactInfo")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("ID");

                    b.HasIndex("AdministratorID");

                    b.ToTable("Shelters");
                });

            modelBuilder.Entity("Stray_Home_Domain.Entities.ShopItem", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Photos")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(65,30)");

                    b.Property<int>("StockQuantity")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("ShopItems");
                });

            modelBuilder.Entity("Stray_Home_Domain.Entities.User", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("ID");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Stray_Home_Domain.Entities.UserAnimal", b =>
                {
                    b.Property<int>("UserID")
                        .HasColumnType("int");

                    b.Property<int>("AnimalID")
                        .HasColumnType("int");

                    b.Property<DateTime>("SubmissionDate")
                        .HasColumnType("datetime(6)");

                    b.HasKey("UserID", "AnimalID");

                    b.HasIndex("AnimalID");

                    b.ToTable("UserAnimals");
                });

            modelBuilder.Entity("Stray_Home_Domain.Entities.UserShopItem", b =>
                {
                    b.Property<int>("UserID")
                        .HasColumnType("int");

                    b.Property<int>("ShopItemID")
                        .HasColumnType("int");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("datetime(6)");

                    b.HasKey("UserID", "ShopItemID");

                    b.HasIndex("ShopItemID");

                    b.ToTable("UserShopItems");
                });

            modelBuilder.Entity("Stray_Home_Domain.Entities.Animal", b =>
                {
                    b.HasOne("Stray_Home_Domain.Entities.Shelter", "Shelter")
                        .WithMany()
                        .HasForeignKey("ShelterID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Shelter");
                });

            modelBuilder.Entity("Stray_Home_Domain.Entities.Comment", b =>
                {
                    b.HasOne("Stray_Home_Domain.Entities.Shelter", "Shelter")
                        .WithMany()
                        .HasForeignKey("ShelterID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Stray_Home_Domain.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Shelter");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Stray_Home_Domain.Entities.News", b =>
                {
                    b.HasOne("Stray_Home_Domain.Entities.Shelter", "Shelter")
                        .WithMany()
                        .HasForeignKey("ShelterID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Shelter");
                });

            modelBuilder.Entity("Stray_Home_Domain.Entities.Shelter", b =>
                {
                    b.HasOne("Stray_Home_Domain.Entities.User", "Administrator")
                        .WithMany()
                        .HasForeignKey("AdministratorID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Administrator");
                });

            modelBuilder.Entity("Stray_Home_Domain.Entities.UserAnimal", b =>
                {
                    b.HasOne("Stray_Home_Domain.Entities.Animal", "Animal")
                        .WithMany()
                        .HasForeignKey("AnimalID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Stray_Home_Domain.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Animal");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Stray_Home_Domain.Entities.UserShopItem", b =>
                {
                    b.HasOne("Stray_Home_Domain.Entities.ShopItem", "ShopItem")
                        .WithMany()
                        .HasForeignKey("ShopItemID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Stray_Home_Domain.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ShopItem");

                    b.Navigation("User");
                });
#pragma warning restore 612, 618
        }
    }
}
